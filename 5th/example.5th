( ***************************************************
  Example code
  *************************************************** )

( recursive factorial on stack )
( n -- n! )
: FACTORIAL
  DUP IF
    DUP 1 - RECURSE *
  ELSE
    DROP 1
  ENDIF
;

( accum n -- accum*n n-1 )
: _TAILFACTINNER
  DUP ROT *     ( n accum*n )
  SWAP 1 -      ( accum n-1 )
  DUP ?TAIL     ( tail recursion when n != 0 )
;


( tail-recursed factorial as a loop )
( n -- n! )
: TAILFACT
  1 SWAP         ( 1 n )
  _TAILFACTINNER ( n! 0 )
  DROP

  HIDE _TAILFACTINNER
;

CHAR a DEFINE 'a'
CHAR A DEFINE 'A'
CHAR z DEFINE 'z'
CHAR Z DEFINE 'Z'

( CHAR BASE -- CHAR )
: _ROT13C
  SWAP OVER -        ( b c-b )
  13 + 26 MOD + ( b+(c-b+13)%26 )
;

( rot13 in-place )
( str -- str )
: ROT13
  DUP STRLEN        ( str len )
  0 FOR             ( str )
    DUP I [@]       ( str char )

    DUP 'A' >=      ( str char char>=A )
    OVER 'Z' <= &   ( str char A<=c<=Z )
    IF
        'A' _ROT13C
    ENDIF

    DUP 'a' >=      ( str char char>=A )
    OVER 'z' <= &   ( str char A<=c<=Z )
    IF
        'a' _ROT13C
    ENDIF

    OVER I [!]       ( str; str[i]=char )
  ROF

  HIDE _ROT13C
;


( test generation of closures with DOES, by creating a
  div/mul unit-conversion functor )
( mul div -- )
: UNITS

  ( create named constructor for closure )
  WORD HERE C@ CREATE

  ( transfer 2 words from stack into closure )
  2 PRESERVE DOES>

  ( this is what happens inside the closure )
  */
;

( another way of creating a variable.  less efficient because
  the dereference is inside an anon word rather than inlined )
( -- )
: VARCLOSURE
  WORD HERE C@ CREATE
  1 ALLOT
  DUP 0 SWAP !
  1 PRESERVE DOES>
  @ 
;

( closure which is the binding of a single parameter to another function )
( param func -- )
: BIND1
  WORD HERE C@ CREATE
  SWAP
  1 PRESERVE
  1 PRESERVEFUNC
  DOES>

  EXECUTE
;

: SCEMIT
  0 SYSCALL2 DROP
;

( print a string )
( ptr -- )
: SCTELL
  DUP
  STRLEN            ( ptr len )
  0 FOR             ( loop through length )
    DUP I [@] SCEMIT ( print a char)
  ROF
  DROP              ( drop the ptr)
;

( nested inclusion )
INCLUDE 5th/minmax.5th
